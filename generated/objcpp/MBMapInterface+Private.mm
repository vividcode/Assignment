// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from Map.djinni

#import "MBMapInterface+Private.h"
#import "MBMapRenderDelegate.h"
#import "MBMapInterface.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "MBMapRenderDelegate+Private.h"
#import "StyledMap.hpp"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface MBMapInterface () <MBMapRenderDelegate>

- (id)initWithCpp:(const std::shared_ptr<::MapInterface>&)cppRef;

@end

@implementation MBMapInterface {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::MapInterface>> _cppRefHandle;
}

+ (nullable MBMapInterface *) createMapInterface
{
    StyledMap * styledMap = new StyledMap();
    auto objcpp_result_ = std::shared_ptr<StyledMap>(styledMap);
    MBMapInterface * retVal = ::djinni_generated::MapInterface::fromCpp(objcpp_result_);
    styledMap->delegate = ::djinni_generated::MapRenderDelegate::toCpp(retVal);
    return  retVal;
}

- (id)initWithCpp:(const std::shared_ptr<::MapInterface>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (void)render:(void (^_Nonnull)(void))completionBlock {
    self.renderCompletion = completionBlock;
    try {
        _cppRefHandle.get()->render();
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)invokeCallback {
    printf("callback!");
    self.renderCompletion();
}

namespace djinni_generated {

auto MapInterface::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto MapInterface::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<MBMapInterface>(cpp);
}

}  // namespace djinni_generated

@end
